{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","placeholder","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","class","GifExpertApp","key","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAgC,KAAjBC,WAENC,mBAAS,KAFc,mBAEpDC,EAFoD,KAExCC,EAFwC,KAc3D,OACG,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC7BT,GAAc,SAAAU,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKjB,SACG,uBAAOO,KAAK,OACTC,MAAOT,EACPU,SAdiB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,QAe/CG,YAAY,yC,+BCtBXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACF,GACRC,EAHc,sDACJ,mCADI,kBAEN,GAFM,cAGmEC,UAAUH,IAH7E,SAKDI,MAAMF,GALL,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAXjB,kBAcbL,GAda,4CAAH,sDCEPQ,EAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAElC,OACG,sBAAKI,UAAU,yCAAf,UACG,4BAAIL,IACJ,qBAAKM,IAAKL,EAAKM,IAAKP,QCFhBQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACbf,mBAAS,CAChCsB,KAAM,GACNc,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OAPAC,qBAAU,WACPzB,EAAQC,GACJyB,MAAK,SAAAC,GACHH,EAAS,CAAEhB,KAAMmB,EAAML,SAAS,SAEtC,CAACrB,IAEGsB,EDV2BK,CAAa3B,GAAjCc,EAFwB,EAE9BP,KAAcc,EAFgB,EAEhBA,QAEtB,OACG,mCAEKA,EAAU,qBAAKJ,UAAU,gBAAf,SACT,qBAAKW,MAAM,sCAAX,SAAiD,sBAAKA,MAAM,kBAAX,UAC9C,wBAAW,+BAGd,gCACG,oBAAIX,UAAU,gDAAd,SAA+DjB,IAC/D,qBAAKiB,UAAU,YAAf,SACIH,EAAOL,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEOA,GADCA,EAAIC,eElBpBkB,EAAe,WAAO,IAAD,EAEK5C,mBAAS,CAAC,mBAFf,mBAExBD,EAFwB,KAEZD,EAFY,KAQ/B,OACG,qCACG,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAECC,EAAWyB,KAAI,SAACT,EAAU8B,GAAX,OACb,cAAC,EAAD,CAAS9B,SAAUA,GAAe8B,U,MCd9CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00d42191.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories, categories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (inputValue.trim().length >= 2) {\r\n         setCategories(catgs => [inputValue, ...catgs]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            placeholder='Ingresa el nombre de la categoria'\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n   const API_KEY = 'YOXemyF1o8HAMv9egtf5wqs3mrMynaQL';\r\n   const LIMIT = 10;\r\n   const URL = `http://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&limit=${LIMIT}&q=${encodeURI(category)}`;\r\n\r\n   const resp = await fetch(URL);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(img => ({\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n   }))\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n   // console.log(img);\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <p>{title}</p>\r\n         <img src={url} alt={title} />\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n\r\n         { loading ? <div className=\"center-loader\">\r\n            <div class=\"loadingio-spinner-ripple-yj09y31vqe\"><div class=\"ldio-9zi3wtv0tk\">\r\n               <div></div><div></div>\r\n            </div></div>\r\n         </div> :\r\n            <div>\r\n               <h3 className=\"group-title animate__animated animate__fadeIn\">{category}</h3>\r\n               <div className=\"card-grid\">\r\n                  {images.map(img => (\r\n                     <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                     />\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         }\r\n      </>\r\n   )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   })\r\n\r\n   useEffect(() => {\r\n      getGifs(category)\r\n         .then(imgs => {\r\n            setState({ data: imgs, loading: false });\r\n         })\r\n   }, [category]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n   // const handleAdd = () => {\r\n   //    setCategories(['Hunterxhunter', ...categories]);\r\n   // }\r\n\r\n   return (\r\n      <>\r\n         <h1>Buscador de Gifs</h1>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         {categories.map((category, key) => (\r\n            <GifGrid category={category} key={key} />\r\n         ))}\r\n      </>\r\n   )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}