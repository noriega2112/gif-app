{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","console","log","placeholder","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","class","GifExpertApp","defaultCategories","key","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAgC,KAAjBC,WAENC,mBAAS,KAFc,mBAEpDC,EAFoD,KAExCC,EAFwC,KAmB3D,OACG,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC7BT,GAAc,SAAAU,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKjB,SACG,uBAAOO,KAAK,OACTC,MAAOT,EACPU,SAnBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,OAEvBG,QAAQC,IAAI,8BAiBNC,YAAY,yC,+BC3BXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACF,GACRC,EAHc,uDACJ,mCADI,kBAEN,GAFM,cAGoEC,UAAUH,IAH9E,SAKDI,MAAMF,GALL,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAXjB,kBAcbL,GAda,4CAAH,sDCGPQ,EAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAElC,OACG,sBAAKI,UAAU,yCAAf,UACG,4BAAIL,IACJ,qBAAKM,IAAKL,EAAKM,IAAKP,QCFhBQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACbjB,mBAAS,CAChCwB,KAAM,GACNc,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OAPAC,qBAAU,WACPzB,EAAQC,GACJyB,MAAK,SAAAC,GACHH,EAAS,CAAEhB,KAAMmB,EAAML,SAAS,SAEtC,CAACrB,IAEGsB,EDT2BK,CAAa3B,GAAjCc,EAFwB,EAE9BP,KAAcc,EAFgB,EAEhBA,QAEtB,OACG,mCAEKA,EAAU,qBAAKJ,UAAU,gBAAf,SACT,qBAAKW,MAAM,sCAAX,SAAiD,sBAAKA,MAAM,kBAAX,UAC9C,wBAAW,+BAGd,gCACG,oBAAIX,UAAU,gDAAd,SAA+DjB,IAC/D,qBAAKiB,UAAU,YAAf,SACIH,EAAOL,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEOA,GADCA,EAAIC,eEnBpBkB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAErB/C,mBAAS+C,GAFY,mBAElDhD,EAFkD,KAEtCD,EAFsC,KAQzD,OACG,qCACG,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAECC,EAAW2B,KAAI,SAACT,EAAU+B,GAAX,OACb,cAAC,EAAD,CAAS/B,SAAUA,GAAe+B,U,MCd9CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f86bb89b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories, categories }) => {\n\n   const [inputValue, setInputValue] = useState('');\n\n   const handleInputChange = (e) => {\n      setInputValue(e.target.value);\n\n      console.log('handleInputChange llamado');\n\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if (inputValue.trim().length >= 2) {\n         setCategories(catgs => [inputValue, ...catgs]);\n         setInputValue('');\n      }\n   }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <input type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            placeholder='Ingresa el nombre de la categoria'\n         />\n      </form>\n   )\n}\n\nAddCategory.propTypes = {\n   setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n   const API_KEY = 'YOXemyF1o8HAMv9egtf5wqs3mrMynaQL';\n   const LIMIT = 10;\n   const URL = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&limit=${LIMIT}&q=${encodeURI(category)}`;\n\n   const resp = await fetch(URL);\n   const { data } = await resp.json();\n\n   const gifs = data.map(img => ({\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n   }))\n\n   return gifs;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ({ title, url }) => {\n   // console.log(img);\n   return (\n      <div className=\"card animate__animated animate__fadeIn\">\n         <p>{title}</p>\n         <img src={url} alt={title} />\n      </div>\n   )\n}\n\nGifGridItem.propTypes = {\n   title: PropTypes.string.isRequired,\n   url: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n   const { data: images, loading } = useFetchGifs(category);\n\n   return (\n      <>\n\n         { loading ? <div className=\"center-loader\">\n            <div class=\"loadingio-spinner-ripple-yj09y31vqe\"><div class=\"ldio-9zi3wtv0tk\">\n               <div></div><div></div>\n            </div></div>\n         </div> :\n            <div>\n               <h3 className=\"group-title animate__animated animate__fadeIn\">{category}</h3>\n               <div className=\"card-grid\">\n                  {images.map(img => (\n                     <GifGridItem\n                        key={img.id}\n                        {...img}\n                     />\n                  ))}\n               </div>\n            </div>\n         }\n      </>\n   )\n}\n\nGifGrid.propTypes = {\n   category: PropTypes.string.isRequired\n}","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n   const [state, setState] = useState({\n      data: [],\n      loading: true\n   })\n\n   useEffect(() => {\n      getGifs(category)\n         .then(imgs => {\n            setState({ data: imgs, loading: false });\n         })\n   }, [category]);\n\n   return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\n\n   const [categories, setCategories] = useState(defaultCategories);\n\n   // const handleAdd = () => {\n   //    setCategories(['Hunterxhunter', ...categories]);\n   // }\n\n   return (\n      <>\n         <h1>Buscador de Gifs</h1>\n         <AddCategory setCategories={setCategories} />\n         <hr />\n\n         {categories.map((category, key) => (\n            <GifGrid category={category} key={key} />\n         ))}\n      </>\n   )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}